// <auto-generated />
using CalendarService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CalendarService.Migrations
{
    [DbContext(typeof(CalendarServiceContext))]
    [Migration("20180224200410_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("CalendarService.StoredConfigState", b =>
                {
                    b.Property<string>("State")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RedirectUri");

                    b.Property<DateTime>("StoredTime");

                    b.Property<string>("UserId");

                    b.HasKey("State");

                    b.HasIndex("UserId");

                    b.ToTable("ConfigStates");
                });

            modelBuilder.Entity("CalendarService.StoredToken", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessToken");

                    b.Property<DateTime>("ExpiresIn");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Type");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("CalendarService.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CalendarService.StoredConfigState", b =>
                {
                    b.HasOne("CalendarService.User", "User")
                        .WithMany("ConfigStates")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CalendarService.StoredToken", b =>
                {
                    b.HasOne("CalendarService.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
